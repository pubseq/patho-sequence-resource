> thinking big together using small hardware...

# PubSeq Plan

The goal for PubSeq2 is to create and maintain a *pangenome* of all human pathogens with their metadata. For more on the project see

=> README.gmi

=> SURF-research-cloud/README.gmi Accessing SURF HPC and online VMs

SURF HPC VMs are accessible from outside (ssh, http) which means we can host a message broker for pangenome building and sharing. We also have CPU time on the supercomputer Snellius

=> https://servicedesk.surfsara.nl/wiki/display/WIKI/Snellius+hardware+and+file+systems Snellius supercomputer

We note that, even though we have funds for compute (1M CPU hrs) and data storage (2TB), all actual work has to happen on the back of running (and future) grants. I.e., we have no real dedicated funding for execution and efforts are voluntary contributions. We as contributors agree that PubSeq2 pangenomes will be a great resource for future work and can drive new grants.

Some of this plan is driven by the Africa concept note:

=> concept/Africa.gmi

# PLAN

To make PubSeq2 a reality we need to work on (not necessarily in this order):

> Note that every item is worth a paper...

## Data collection

* Fetch public sequences from NCBI and EBI
* Annotate sequences with metadata
* Normalise metadata
* Create workflows that can update fetching data automatically

> Lead: Pjotr Prins

## Create pangenomes

* Use odgi tooling and pggb to create pangenome(s)
* Improve odgi to handle many small pathogens
* Add software for annotation
* Introduce CWL workflows for pangenomes for different targets (clinical/surveillance, small/medium/large size)

> Leads: Arun Isaac, Pjotr Prins, Andrea Guarracino, Michael Crusoe, Erik Garrison

## Search pangenomes

* Starting from a sequence locate the nearest match in a pangenome

> Lead: Andrea Guarracino, Njagi Mwaniki, Pjotr Prins, Erik Garrison

## Support adaptive nanopore sequencing

* Write software to use pangenome search on the fly for adaptive sequencing, running on NVIDIA Jetson driving the Oxford Nanopore

Note this approach contrasts with existing 'reference'-based approaches.

> Lead: Joep de Ligt, George Githinji

## Create clinical user interface

* Write software to give immediate feedback to Doctors

> Lead: Shelby Solomon

## Interfaces

* Write software to upload data to national/public resources

> Lead: Shelby Solomon

## Build CWL environment 'on demand' on SURFSara

* Create VMs on demand
* Add permanent data storage
* Introduce CWL environment
* Fire up VMs through SURF API (requires SURF support - they have Ansible)
=> https://github.com/SasSwart/arvados-cluster Existing support as written by Sas Swart and Michael Crusoe is using OpenNebula + Saltstack
* Create Debian/Guix VMs as Apps
* Deploy and orchestrate Arvados 'cluster' through Saltstack and/or Guix
* Snellius supercompute of certain tasks

> Lead: Arun Isaac, Efraim Flashner, Michael Crusoe, Pjotr Prins, Peter Amstutz

## Create new front-end website

* Pubseq1 is a great prototype, but we need to start from scratch

=> https://covid19.genenetwork.org/ PubSeq1 website

> Lead: Pjotr Prins, Bonface Munyoki, Jorge Gomez


# Future work

## Work on phylogeny

* Compute the phylogeny from the pangenome
* Introduce Nextstrain-type visualisations

> Lead: Gianluca Della Vedova, Simone Ciccolella

## Privacy/enclaves for running remote analysis

* Create secure compute/enclave for pangenome search (2023?)

## Create RISC-V device for driving Nanopore

* Create RISC-V alternative to NVIDIA Jetson (2025?)

## Introduce pangenome analysis on RISC-V supercomputer

* Introduce RISC-V pangenome supercomputer (2025?)
